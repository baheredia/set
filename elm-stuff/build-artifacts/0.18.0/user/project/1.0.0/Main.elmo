var _user$project$Main$view = function (model) {
	var _p0 = model.mode;
	if (_p0.ctor === 'Start') {
		return _user$project$Extras$initialPage;
	} else {
		return _user$project$Extras$gamePage(model);
	}
};
var _user$project$Main$subscriptions = function (model) {
	return A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second, _user$project$Generic$Tick);
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Shuffle':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{mode: _user$project$Generic$Game}),
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$Generic$PutDeck,
						_elm_community$random_extra$Random_List$shuffle(_p1._0))
				};
			case 'PutDeck':
				var _p2 = _p1._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: _elm_lang$core$Tuple$first(
								A2(_user$project$Dynamics$dealCards, _p2, model.table)),
							table: _elm_lang$core$Tuple$second(
								A2(_user$project$Dynamics$dealCards, _p2, model.table)),
							time: 0,
							timeToAddCards: _user$project$Dynamics$time_to_pass
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Select':
				return {
					ctor: '_Tuple2',
					_0: A2(_user$project$Dynamics$makeSelection, _p1._0, model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Resize':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{size: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Tick':
				return {
					ctor: '_Tuple2',
					_0: _user$project$Dynamics$tick(model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: {ctor: '[]'},
							table: _user$project$Dynamics$init_table,
							selection: _user$project$Dynamics$init_selection,
							score: 0,
							mode: _user$project$Generic$Start,
							time: 0,
							timeToAddCards: 15
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		deck: {ctor: '[]'},
		table: _user$project$Dynamics$init_table,
		selection: _user$project$Dynamics$init_selection,
		score: 0,
		mode: _user$project$Generic$Start,
		size: 140,
		time: 0,
		timeToAddCards: _user$project$Dynamics$time_to_pass,
		timeAtStart: 0,
		timeAt23: 0
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
