var _user$project$Main$view = function (model) {
	var size = model.size;
	var _p0 = model.mode;
	if (_p0.ctor === 'Start') {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h1,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Bienvenido a Set, ¿Listo para jugar?'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$Extras$Shuffle(
									_user$project$Extras$initialDeck(false))),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('¡Empieza!'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Extras$Shuffle(
										_user$project$Extras$initialDeck(true))),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Sólo quiero un color'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A4(_user$project$Extras$putCard, size, 0, model.table, model.selection),
				_1: {
					ctor: '::',
					_0: A4(_user$project$Extras$putCard, size, 1, model.table, model.selection),
					_1: {
						ctor: '::',
						_0: A4(_user$project$Extras$putCard, size, 2, model.table, model.selection),
						_1: {
							ctor: '::',
							_0: A4(_user$project$Extras$putCard, size, 3, model.table, model.selection),
							_1: {
								ctor: '::',
								_0: A4(_user$project$Extras$extraCard, size, 0, model.table, model.selection),
								_1: {
									ctor: '::',
									_0: A4(_user$project$Extras$extraCard, size, 3, model.table, model.selection),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'pink'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-flex'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'width', _1: '90px'},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'height', _1: '40px'},
																	_1: {
																		ctor: '::',
																		_0: {ctor: '_Tuple2', _0: 'align-items', _1: 'center'},
																		_1: {
																			ctor: '::',
																			_0: {ctor: '_Tuple2', _0: 'justify-content', _1: 'center'},
																			_1: {
																				ctor: '::',
																				_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
																				_1: {
																					ctor: '::',
																					_0: {ctor: '_Tuple2', _0: 'left', _1: '40px'},
																					_1: {ctor: '[]'}
																				}
																			}
																		}
																	}
																}
															}
														}
													}),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													A2(
														_elm_lang$core$Basics_ops['++'],
														'Puntos:\n ',
														_elm_lang$core$Basics$toString(model.score))),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$style(
														{
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'blue'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-flex'},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'width', _1: '80px'},
																	_1: {
																		ctor: '::',
																		_0: {ctor: '_Tuple2', _0: 'height', _1: '40px'},
																		_1: {
																			ctor: '::',
																			_0: {ctor: '_Tuple2', _0: 'align-items', _1: 'center'},
																			_1: {
																				ctor: '::',
																				_0: {ctor: '_Tuple2', _0: 'justify-content', _1: 'center'},
																				_1: {
																					ctor: '::',
																					_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
																					_1: {
																						ctor: '::',
																						_0: {ctor: '_Tuple2', _0: 'left', _1: '40px'},
																						_1: {
																							ctor: '::',
																							_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
																							_1: {ctor: '[]'}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text(
														_elm_lang$core$Basics$toString(model.time)),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$br,
													{ctor: '[]'},
													{ctor: '[]'}),
												_1: {
													ctor: '::',
													_0: A4(_user$project$Extras$putCard, size, 4, model.table, model.selection),
													_1: {
														ctor: '::',
														_0: A4(_user$project$Extras$putCard, size, 5, model.table, model.selection),
														_1: {
															ctor: '::',
															_0: A4(_user$project$Extras$putCard, size, 6, model.table, model.selection),
															_1: {
																ctor: '::',
																_0: A4(_user$project$Extras$putCard, size, 7, model.table, model.selection),
																_1: {
																	ctor: '::',
																	_0: A4(_user$project$Extras$extraCard, size, 1, model.table, model.selection),
																	_1: {
																		ctor: '::',
																		_0: A4(_user$project$Extras$extraCard, size, 4, model.table, model.selection),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html$br,
																				{ctor: '[]'},
																				{ctor: '[]'}),
																			_1: {
																				ctor: '::',
																				_0: A4(_user$project$Extras$putCard, size, 8, model.table, model.selection),
																				_1: {
																					ctor: '::',
																					_0: A4(_user$project$Extras$putCard, size, 9, model.table, model.selection),
																					_1: {
																						ctor: '::',
																						_0: A4(_user$project$Extras$putCard, size, 10, model.table, model.selection),
																						_1: {
																							ctor: '::',
																							_0: A4(_user$project$Extras$putCard, size, 11, model.table, model.selection),
																							_1: {
																								ctor: '::',
																								_0: A4(_user$project$Extras$extraCard, size, 2, model.table, model.selection),
																								_1: {
																									ctor: '::',
																									_0: A4(_user$project$Extras$extraCard, size, 5, model.table, model.selection),
																									_1: {
																										ctor: '::',
																										_0: A2(
																											_elm_lang$html$Html$br,
																											{ctor: '[]'},
																											{ctor: '[]'}),
																										_1: {
																											ctor: '::',
																											_0: A2(
																												_elm_lang$html$Html$h3,
																												{ctor: '[]'},
																												{
																													ctor: '::',
																													_0: _elm_lang$html$Html$text('Tamaño'),
																													_1: {ctor: '[]'}
																												}),
																											_1: {
																												ctor: '::',
																												_0: A2(
																													_elm_lang$html$Html$select,
																													{ctor: '[]'},
																													{
																														ctor: '::',
																														_0: A2(
																															_elm_lang$html$Html$option,
																															{
																																ctor: '::',
																																_0: _elm_lang$html$Html_Events$onClick(
																																	_user$project$Extras$Resize(140)),
																																_1: {ctor: '[]'}
																															},
																															{
																																ctor: '::',
																																_0: _elm_lang$html$Html$text('pequeño'),
																																_1: {ctor: '[]'}
																															}),
																														_1: {
																															ctor: '::',
																															_0: A2(
																																_elm_lang$html$Html$option,
																																{
																																	ctor: '::',
																																	_0: _elm_lang$html$Html_Events$onClick(
																																		_user$project$Extras$Resize(170)),
																																	_1: {ctor: '[]'}
																																},
																																{
																																	ctor: '::',
																																	_0: _elm_lang$html$Html$text('normal'),
																																	_1: {ctor: '[]'}
																																}),
																															_1: {
																																ctor: '::',
																																_0: A2(
																																	_elm_lang$html$Html$option,
																																	{
																																		ctor: '::',
																																		_0: _elm_lang$html$Html_Events$onClick(
																																			_user$project$Extras$Resize(200)),
																																		_1: {ctor: '[]'}
																																	},
																																	{
																																		ctor: '::',
																																		_0: _elm_lang$html$Html$text('grande'),
																																		_1: {ctor: '[]'}
																																	}),
																																_1: {ctor: '[]'}
																															}
																														}
																													}),
																												_1: {
																													ctor: '::',
																													_0: A2(
																														_elm_lang$html$Html$button,
																														{
																															ctor: '::',
																															_0: _elm_lang$html$Html_Events$onClick(_user$project$Extras$Reset),
																															_1: {ctor: '[]'}
																														},
																														{
																															ctor: '::',
																															_0: _elm_lang$html$Html$text('Reset'),
																															_1: {ctor: '[]'}
																														}),
																													_1: {ctor: '[]'}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			});
	}
};
var _user$project$Main$subscriptions = function (model) {
	return A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second, _user$project$Extras$Tick);
};
var _user$project$Main$init_selection = {
	ctor: '::',
	_0: false,
	_1: {
		ctor: '::',
		_0: false,
		_1: {
			ctor: '::',
			_0: false,
			_1: {
				ctor: '::',
				_0: false,
				_1: {
					ctor: '::',
					_0: false,
					_1: {
						ctor: '::',
						_0: false,
						_1: {
							ctor: '::',
							_0: false,
							_1: {
								ctor: '::',
								_0: false,
								_1: {
									ctor: '::',
									_0: false,
									_1: {
										ctor: '::',
										_0: false,
										_1: {
											ctor: '::',
											_0: false,
											_1: {
												ctor: '::',
												_0: false,
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$init_table = {
	ctor: '::',
	_0: _elm_lang$core$Maybe$Nothing,
	_1: {
		ctor: '::',
		_0: _elm_lang$core$Maybe$Nothing,
		_1: {
			ctor: '::',
			_0: _elm_lang$core$Maybe$Nothing,
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Maybe$Nothing,
				_1: {
					ctor: '::',
					_0: _elm_lang$core$Maybe$Nothing,
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Maybe$Nothing,
						_1: {
							ctor: '::',
							_0: _elm_lang$core$Maybe$Nothing,
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Maybe$Nothing,
								_1: {
									ctor: '::',
									_0: _elm_lang$core$Maybe$Nothing,
									_1: {
										ctor: '::',
										_0: _elm_lang$core$Maybe$Nothing,
										_1: {
											ctor: '::',
											_0: _elm_lang$core$Maybe$Nothing,
											_1: {
												ctor: '::',
												_0: _elm_lang$core$Maybe$Nothing,
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		deck: {ctor: '[]'},
		table: _user$project$Main$init_table,
		selection: _user$project$Main$init_selection,
		score: 0,
		mode: _user$project$Extras$Start,
		size: 140,
		time: 0,
		timeToAddCards: 15,
		timeAtStart: 0,
		timeAt23: 0
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Shuffle':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{mode: _user$project$Extras$Game}),
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$Extras$PutDeck,
						_elm_community$random_extra$Random_List$shuffle(_p1._0))
				};
			case 'PutDeck':
				var _p2 = _p1._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: _elm_lang$core$Tuple$first(
								A2(_user$project$Extras$dealCards, _p2, model.table)),
							table: _elm_lang$core$Tuple$second(
								A2(_user$project$Extras$dealCards, _p2, model.table)),
							time: 0,
							timeToAddCards: 15
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Select':
				var switchedSelection = A2(_user$project$Extras$switchElement, _p1._0, model.selection);
				return (_elm_lang$core$Native_Utils.cmp(
					_user$project$Extras$howManyTrue(switchedSelection),
					3) < 1) ? ((_elm_lang$core$Native_Utils.eq(
					_user$project$Extras$howManyTrue(switchedSelection),
					3) && _user$project$Extras$isListSet(
					A2(_user$project$Extras$filteredBy, switchedSelection, model.table))) ? ((_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$List$length(model.table),
					12) < 1) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: _elm_lang$core$Tuple$first(
								A2(
									_user$project$Extras$dealCards,
									model.deck,
									A2(_user$project$Extras$takeSetOut, model.table, switchedSelection))),
							table: _elm_lang$core$Tuple$second(
								A2(
									_user$project$Extras$dealCards,
									model.deck,
									A2(_user$project$Extras$takeSetOut, model.table, switchedSelection))),
							selection: _user$project$Main$init_selection,
							score: model.score + 1,
							timeToAddCards: 15
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: model.deck,
							table: A2(
								_user$project$Extras$filteredBy,
								A2(_elm_lang$core$List$map, _elm_lang$core$Basics$not, switchedSelection),
								model.table),
							selection: A2(
								_user$project$Extras$filteredBy,
								A2(_elm_lang$core$List$map, _elm_lang$core$Basics$not, switchedSelection),
								switchedSelection),
							score: model.score + 1,
							timeToAddCards: 15
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				}) : {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{selection: switchedSelection}),
					_1: _elm_lang$core$Platform_Cmd$none
				}) : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Resize':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{size: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Tick':
				return (_elm_lang$core$Native_Utils.cmp(model.score, 24) > -1) ? {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none} : ((_elm_lang$core$Native_Utils.eq(model.timeToAddCards, 1) && ((_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$List$length(model.table),
					15) < 1) && (!_elm_lang$core$List$isEmpty(model.deck)))) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: _elm_lang$core$Tuple$first(
								A2(
									_user$project$Extras$dealCards,
									model.deck,
									A2(
										_elm_lang$core$Basics_ops['++'],
										model.table,
										{
											ctor: '::',
											_0: _elm_lang$core$Maybe$Nothing,
											_1: {
												ctor: '::',
												_0: _elm_lang$core$Maybe$Nothing,
												_1: {
													ctor: '::',
													_0: _elm_lang$core$Maybe$Nothing,
													_1: {ctor: '[]'}
												}
											}
										}))),
							table: _elm_lang$core$Tuple$second(
								A2(
									_user$project$Extras$dealCards,
									model.deck,
									A2(
										_elm_lang$core$Basics_ops['++'],
										model.table,
										{
											ctor: '::',
											_0: _elm_lang$core$Maybe$Nothing,
											_1: {
												ctor: '::',
												_0: _elm_lang$core$Maybe$Nothing,
												_1: {
													ctor: '::',
													_0: _elm_lang$core$Maybe$Nothing,
													_1: {ctor: '[]'}
												}
											}
										}))),
							selection: A2(
								_elm_lang$core$Basics_ops['++'],
								model.selection,
								{
									ctor: '::',
									_0: false,
									_1: {
										ctor: '::',
										_0: false,
										_1: {
											ctor: '::',
											_0: false,
											_1: {ctor: '[]'}
										}
									}
								}),
							time: model.time + 1,
							timeToAddCards: 15
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{time: model.time + 1, timeToAddCards: model.timeToAddCards - 1}),
					_1: _elm_lang$core$Platform_Cmd$none
				});
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: {ctor: '[]'},
							table: _user$project$Main$init_table,
							selection: _user$project$Main$init_selection,
							score: 0,
							mode: _user$project$Extras$Start,
							time: 0,
							timeToAddCards: 15
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
