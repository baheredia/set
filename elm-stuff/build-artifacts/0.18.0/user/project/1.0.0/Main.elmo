var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$init_selection = {
	ctor: '::',
	_0: false,
	_1: {
		ctor: '::',
		_0: false,
		_1: {
			ctor: '::',
			_0: false,
			_1: {
				ctor: '::',
				_0: false,
				_1: {
					ctor: '::',
					_0: false,
					_1: {
						ctor: '::',
						_0: false,
						_1: {
							ctor: '::',
							_0: false,
							_1: {
								ctor: '::',
								_0: false,
								_1: {
									ctor: '::',
									_0: false,
									_1: {
										ctor: '::',
										_0: false,
										_1: {
											ctor: '::',
											_0: false,
											_1: {
												ctor: '::',
												_0: false,
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$init_table = {
	ctor: '::',
	_0: {ctor: '[]'},
	_1: {
		ctor: '::',
		_0: {ctor: '[]'},
		_1: {
			ctor: '::',
			_0: {ctor: '[]'},
			_1: {
				ctor: '::',
				_0: {ctor: '[]'},
				_1: {
					ctor: '::',
					_0: {ctor: '[]'},
					_1: {
						ctor: '::',
						_0: {ctor: '[]'},
						_1: {
							ctor: '::',
							_0: {ctor: '[]'},
							_1: {
								ctor: '::',
								_0: {ctor: '[]'},
								_1: {
									ctor: '::',
									_0: {ctor: '[]'},
									_1: {
										ctor: '::',
										_0: {ctor: '[]'},
										_1: {
											ctor: '::',
											_0: {ctor: '[]'},
											_1: {
												ctor: '::',
												_0: {ctor: '[]'},
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$init_deck = _user$project$Extras$triple4(
	{
		ctor: '::',
		_0: {ctor: '[]'},
		_1: {ctor: '[]'}
	});
var _user$project$Main$Model = F5(
	function (a, b, c, d, e) {
		return {deck: a, table: b, selection: c, score: d, mode: e};
	});
var _user$project$Main$Game = {ctor: 'Game'};
var _user$project$Main$Start = {ctor: 'Start'};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		deck: A2(_elm_lang$core$List$drop, 75, _user$project$Main$init_deck),
		table: _user$project$Main$init_table,
		selection: _user$project$Main$init_selection,
		score: 0,
		mode: _user$project$Main$Start
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$ExtraCard = {ctor: 'ExtraCard'};
var _user$project$Main$addMoreCards = F2(
	function (lst, deck) {
		var sty = _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'yellow'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'pointer'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'width', _1: '100px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'height', _1: '100px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-flex'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'left', _1: '20px'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'align-items', _1: 'center'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'justify-content', _1: 'center'},
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				}
			});
		return ((_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$List$length(lst),
			15) > 0) || _elm_lang$core$List$isEmpty(deck)) ? A2(
			_elm_lang$html$Html$span,
			{ctor: '[]'},
			{ctor: '[]'}) : A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$ExtraCard),
				_1: {
					ctor: '::',
					_0: sty,
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Más cartas'),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Main$Reset = {ctor: 'Reset'};
var _user$project$Main$Set = {ctor: 'Set'};
var _user$project$Main$haySet = function (b) {
	var sty = F2(
		function (op1, op2) {
			return _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'background-color', _1: op1},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'cursor', _1: op2},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'width', _1: '100px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'height', _1: '100px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-flex'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'left', _1: '20px'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'align-items', _1: 'center'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'justify-content', _1: 'center'},
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				});
		});
	var _p0 = b;
	if (_p0 === true) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Set),
				_1: {
					ctor: '::',
					_0: A2(sty, 'red', 'pointer'),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('¡Set!'),
				_1: {ctor: '[]'}
			});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: A2(sty, 'grey', 'default'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('¡Busca!'),
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$Main$Select = function (a) {
	return {ctor: 'Select', _0: a};
};
var _user$project$Main$putCard = F2(
	function (x, model) {
		var ancho = 170;
		return A2(
			_elm_lang$html$Html$img,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$src(
					_user$project$Extras$direccion(
						A2(
							_user$project$Extras$takeElementInPosition,
							_user$project$Extras$ind(x),
							model.table))),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$width(ancho),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'border',
									_1: _user$project$Extras$queBorde(
										A2(
											_user$project$Extras$takeElementInPosition,
											_user$project$Extras$ind(x),
											model.selection))
								},
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$Main$Select(
									_user$project$Extras$ind(x))),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Main$extraCard = F2(
	function (n, model) {
		return (_elm_lang$core$Native_Utils.cmp(
			_elm_lang$core$List$length(model.table),
			12) > 0) ? A2(_user$project$Main$putCard, 12 + n, model) : A2(
			_elm_lang$html$Html$span,
			{ctor: '[]'},
			{ctor: '[]'});
	});
var _user$project$Main$PutDeck = function (a) {
	return {ctor: 'PutDeck', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Shuffle':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{mode: _user$project$Main$Game}),
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$Main$PutDeck,
						_elm_community$random_extra$Random_List$shuffle(model.deck))
				};
			case 'PutDeck':
				var _p2 = _p1._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: A2(_elm_lang$core$List$drop, 12, _p2),
							table: A2(_elm_lang$core$List$take, 12, _p2)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Select':
				var _p3 = _p1._0;
				return (_elm_lang$core$Native_Utils.cmp(
					_user$project$Extras$howManyTrue(
						A2(_user$project$Extras$togleElement, _p3, model.selection)),
					3) < 1) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							selection: A2(_user$project$Extras$togleElement, _p3, model.selection)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Set':
				return (_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$List$length(model.table),
					12) < 1) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: _elm_lang$core$Tuple$first(
								A2(
									_user$project$Extras$putMoreCards,
									model.deck,
									A2(_user$project$Extras$dropSet, model.table, model.selection))),
							table: _elm_lang$core$Tuple$second(
								A2(
									_user$project$Extras$putMoreCards,
									model.deck,
									A2(_user$project$Extras$dropSet, model.table, model.selection))),
							selection: _user$project$Main$init_selection,
							score: model.score + 1
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: model.deck,
							table: A2(
								_user$project$Extras$escoje,
								A2(_elm_lang$core$List$map, _elm_lang$core$Basics$not, model.selection),
								model.table),
							selection: A2(
								_user$project$Extras$escoje,
								A2(_elm_lang$core$List$map, _elm_lang$core$Basics$not, model.selection),
								model.selection),
							score: model.score + 1
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ExtraCard':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							deck: _elm_lang$core$Tuple$first(
								A2(
									_user$project$Extras$putMoreCards,
									model.deck,
									A2(
										_elm_lang$core$Basics_ops['++'],
										model.table,
										{
											ctor: '::',
											_0: {ctor: '[]'},
											_1: {
												ctor: '::',
												_0: {ctor: '[]'},
												_1: {
													ctor: '::',
													_0: {ctor: '[]'},
													_1: {ctor: '[]'}
												}
											}
										}))),
							table: _elm_lang$core$Tuple$second(
								A2(
									_user$project$Extras$putMoreCards,
									model.deck,
									A2(
										_elm_lang$core$Basics_ops['++'],
										model.table,
										{
											ctor: '::',
											_0: {ctor: '[]'},
											_1: {
												ctor: '::',
												_0: {ctor: '[]'},
												_1: {
													ctor: '::',
													_0: {ctor: '[]'},
													_1: {ctor: '[]'}
												}
											}
										}))),
							selection: A2(
								_elm_lang$core$Basics_ops['++'],
								model.selection,
								{
									ctor: '::',
									_0: false,
									_1: {
										ctor: '::',
										_0: false,
										_1: {
											ctor: '::',
											_0: false,
											_1: {ctor: '[]'}
										}
									}
								})
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: {deck: _user$project$Main$init_deck, table: _user$project$Main$init_table, selection: _user$project$Main$init_selection, score: 0, mode: _user$project$Main$Start},
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$Shuffle = {ctor: 'Shuffle'};
var _user$project$Main$view = function (model) {
	var _p4 = model.mode;
	if (_p4.ctor === 'Start') {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h1,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Bienvenido a Set, ¿Listo para jugar?'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Shuffle),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('¡Empieza!'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_user$project$Main$putCard, 0, model),
				_1: {
					ctor: '::',
					_0: A2(_user$project$Main$putCard, 1, model),
					_1: {
						ctor: '::',
						_0: A2(_user$project$Main$putCard, 2, model),
						_1: {
							ctor: '::',
							_0: A2(_user$project$Main$putCard, 3, model),
							_1: {
								ctor: '::',
								_0: A2(_user$project$Main$extraCard, 0, model),
								_1: {
									ctor: '::',
									_0: A2(_user$project$Main$extraCard, 3, model),
									_1: {
										ctor: '::',
										_0: _user$project$Main$haySet(
											_user$project$Extras$isListSet(
												A2(_user$project$Extras$escoje, model.selection, model.table))),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$style(
														{
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'pink'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-flex'},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'width', _1: '100px'},
																	_1: {
																		ctor: '::',
																		_0: {ctor: '_Tuple2', _0: 'height', _1: '100px'},
																		_1: {
																			ctor: '::',
																			_0: {ctor: '_Tuple2', _0: 'align-items', _1: 'center'},
																			_1: {
																				ctor: '::',
																				_0: {ctor: '_Tuple2', _0: 'justify-content', _1: 'center'},
																				_1: {
																					ctor: '::',
																					_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
																					_1: {
																						ctor: '::',
																						_0: {ctor: '_Tuple2', _0: 'top', _1: '-9px'},
																						_1: {
																							ctor: '::',
																							_0: {ctor: '_Tuple2', _0: 'left', _1: '40px'},
																							_1: {ctor: '[]'}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text(
														A2(
															_elm_lang$core$Basics_ops['++'],
															'Llevas ',
															A2(
																_elm_lang$core$Basics_ops['++'],
																_elm_lang$core$Basics$toString(model.score),
																' sets'))),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$br,
													{ctor: '[]'},
													{ctor: '[]'}),
												_1: {
													ctor: '::',
													_0: A2(_user$project$Main$putCard, 4, model),
													_1: {
														ctor: '::',
														_0: A2(_user$project$Main$putCard, 5, model),
														_1: {
															ctor: '::',
															_0: A2(_user$project$Main$putCard, 6, model),
															_1: {
																ctor: '::',
																_0: A2(_user$project$Main$putCard, 7, model),
																_1: {
																	ctor: '::',
																	_0: A2(_user$project$Main$extraCard, 1, model),
																	_1: {
																		ctor: '::',
																		_0: A2(_user$project$Main$extraCard, 4, model),
																		_1: {
																			ctor: '::',
																			_0: A2(_user$project$Main$addMoreCards, model.table, model.deck),
																			_1: {
																				ctor: '::',
																				_0: A2(
																					_elm_lang$html$Html$br,
																					{ctor: '[]'},
																					{ctor: '[]'}),
																				_1: {
																					ctor: '::',
																					_0: A2(_user$project$Main$putCard, 8, model),
																					_1: {
																						ctor: '::',
																						_0: A2(_user$project$Main$putCard, 9, model),
																						_1: {
																							ctor: '::',
																							_0: A2(_user$project$Main$putCard, 10, model),
																							_1: {
																								ctor: '::',
																								_0: A2(_user$project$Main$putCard, 11, model),
																								_1: {
																									ctor: '::',
																									_0: A2(_user$project$Main$extraCard, 2, model),
																									_1: {
																										ctor: '::',
																										_0: A2(_user$project$Main$extraCard, 5, model),
																										_1: {
																											ctor: '::',
																											_0: A2(
																												_elm_lang$html$Html$button,
																												{
																													ctor: '::',
																													_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Reset),
																													_1: {ctor: '[]'}
																												},
																												{
																													ctor: '::',
																													_0: _elm_lang$html$Html$text('Reset'),
																													_1: {ctor: '[]'}
																												}),
																											_1: {ctor: '[]'}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			});
	}
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
